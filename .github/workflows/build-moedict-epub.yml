# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
      - v*
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Perl environment
        # You may pin to the exact commit or the version.
        # uses: shogo82148/actions-setup-perl@341aa635c06050493b41d71134eea58bfc5f4018
        uses: shogo82148/actions-setup-perl@v1.8.3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          cpanm --sudo Unicode::Collate Mojo JSON Mojo EBook::EPUB EBook::EPUB::Lite File::Slurp
          curl -sL -O https://github.com/g0v/moedict-data/raw/master/dict-revised.json
          curl -sL -O https://github.com/g0v/moedict-data/raw/master/dict-cat.json
          perl to-epub.pl

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Get a release
        id: get_release
        uses: cardinalby/git-get-release-action@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.get_version.outputs.VERSION }}

      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The URL for uploading assets to the release
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          # The path to the asset you want to upload
          asset_path: ./moedict.epub
          # The name of the asset you want to upload
          asset_name: moedict.epub
          # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
          asset_content_type: application/epub+zip

